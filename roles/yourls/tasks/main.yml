#########################################################################
# Title:            Community: yourls Role                           #
# Author(s):        l3uddz, desimaniac                                  #
# URL:              https://github.com/Cloudbox/Community               #
# Docker Image(s):  yourls                                              #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: MariaDB Role
  include_role:
    name: mariadb

- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare-dns
  vars:
    record: yourls
  when: cloudflare_enabled

- name: Stop and remove any existing containers
  docker_container: "name={{ item }} state=absent"
  with_items:
    - yourls

- name: Create required directories
  file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }}"
  with_items:
    - /opt/yourls

- name: Create and start yourls container
  docker_container:
    name: yourls
    image: "yourls"
    pull: yes
    env:
      TZ: "{{ tz }}"
      PUID: "{{ uid }}"
      PGID: "{{ gid }}"
      VIRTUAL_HOST: "yourls.{{ user.domain }}"
      VIRTUAL_PORT: "80"
      LETSENCRYPT_HOST: "yourls.{{ user.domain }}"
      LETSENCRYPT_EMAIL: "{{ user.email }}"
      YOURLS_DB_HOST: "mariadb"
      YOURLS_DB_NAME: "yourls"
      YOURLS_DB_USER: "root"
      YOURLS_DB_PASS: "password321"
      YOURLS_SITE: "https://yourls.tzelf.com"
      YOURLS_PRIVATE: "true"

    volumes:
      - "/opt/yourls/conf:/config"
      - "/opt/yourls/data:/data"
      - "/mnt:/mnt"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - yourls
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
